my_char
paste(my_char, collapse = " ")
c(my_char, "Rahul")
my_name <- c(my_char, "Rahul")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y", "Z"), sep="")
LETTERS
paste(LETTERS, 1:4, sep="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_data
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[! is.na(x)]
y
y[y>0]
x
x[x>0]
play()
x[x>0][! is.na(x)]
nxt()
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[2300]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
vect2
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
my_vector
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
! 5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5>8 || 6!=8 && 4 > 3.9
isTRUE (6>4)
identical('twins', 'twins')
xor(5 ==6, !FALSE)
play()
8==8.0
identical(xor,'xor')
nxt()
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints <=0)
any(ints <0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x) {x+1}, 6)
evaluate(function(x) {x[1]}, c(8,4,0))
evaluate(function(x) {x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("ho", "ho", "ho")
submit()
mad_libs(noun="juice", place="hongkong", adjective="kill")
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
d1
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
unclass(t1)
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() -t1
difftime(Sys.time(), t1, units='days')
exit
bye
bye()
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
length(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
flag_shapes
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, uniqu
e)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags#landmass)
)
table(flags$landmass)
play()
flags$landmass
nxt()
table(flags$animate)
play()
sapply(flags$animate, mean)
tapply(flags$animate, flags$landmass, mean)
nxt()
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
iris
install.packages("ggplot2")
library(ggplot2)
head(iris)
qplot(Sepal.Length, Petal.Length, data = iris, color = Species)
airmiles
head(airquality)
mars
cars
data()
head(mtcars)
flags
qplot(religion, colours, data = flags, color = landmass)
qplot(religion, language, data = flags, color = landmass)
sleep
women
islands
esoph
cars
qplot(speed, dist, data = cars)
qplot(speed, dist, data = cars)
head(USPersonalExpenditure)
USPersonalExpendit
USPersonalExpenditure
USArrests
?gl
gl(2,8)
gl(3,8)
gl(3,10)
split(1:30, gl(3,10))
split(airquality, airquality$Month)
lapply(split(airquality, airquality$Month), function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
sapply(split(airquality, airquality$Month), function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")]))
sapply(split(airquality, airquality$Month), function(x) colMeans(x[,c("Ozone", "Solar.R", "Wind")], na.rm=TRUE))
swirl()
bye()
swirl()
